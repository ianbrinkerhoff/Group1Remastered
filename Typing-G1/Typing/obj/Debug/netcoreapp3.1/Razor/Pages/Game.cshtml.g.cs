#pragma checksum "D:\Ian Brinkerhoff\Coding\Group1Remastered\Typing-G1\Typing\Pages\Game.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e6f604b0d8d90ac1612ddfe0031b90e9a3e18613"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Typing.Pages.Pages_Game), @"mvc.1.0.razor-page", @"/Pages/Game.cshtml")]
namespace Typing.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Ian Brinkerhoff\Coding\Group1Remastered\Typing-G1\Typing\Pages\_ViewImports.cshtml"
using Typing;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e6f604b0d8d90ac1612ddfe0031b90e9a3e18613", @"/Pages/Game.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b58f7fd1c281f4de1466f65b79606e943a1885af", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Game : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("player1input"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/action_page.php"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("visibility:hidden;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("player2input"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
    <h1></h1>

<h1>Play Game</h1>

<h1>Welcome to the typing game!</h1>
<center><div class=""timer"" id=""timer""></div></center>
<div id=""demo""></div>
<br />

<div class=""row"">
    <!--Player1-->
    <div class=""column"" style="" background-color: #d64161;"">
        <button id=""P1ready"" onclick=""changeText(this)"">Ready?</button>
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6f604b0d8d90ac1612ddfe0031b90e9a3e186134779", async() => {
                WriteLiteral("\r\n            <label for=\"word1\">Word 1:</label>\r\n            <input type=\"text\" id=\"word\" name=\"word\"><br><br>\r\n            <input type=\"submit\" value=\"Submit\">\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n    <!--Player2-->\r\n    <div class=\"column\" style=\" background-color: #ff7b25;\">\r\n        <button id=\"P2ready\" onclick=\"changeText(this)\">Ready?</button>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6f604b0d8d90ac1612ddfe0031b90e9a3e186136637", async() => {
                WriteLiteral("\r\n            <label for=\"word1\">Word 1:</label>\r\n            <input type=\"text\" id=\"word1\" name=\"word1\"><br><br>\r\n            <input type=\"submit\" value=\"Submit\">\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
</div>

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""></script>

<script>
        var ready = 0;
        var placeholderDB = [""refrigerator"", ""microwave"", ""oven"", ""dishwasher"", ""stovetop"", ""coffee""];

        const quoteDisplayElement = document.getElementById('demo');
        const quoteInputElement = document.getElementById('word');
        const timerElement = document.getElementById('timer');

        function changeText(id) {
            id.innerHTML = ""Let's Go!"";
            id.disabled = true;
            ready++;
            playersReady();
        }

        function playersReady() {
            if (ready == 2) {
                document.getElementById(""P1ready"").style.visibility = ""hidden"";
                document.getElementById(""P2ready"").style.visibility = ""hidden"";
                gameStart();
            }
        }

        function gameStart() {
            document.getElementById(""player1input"").style.visibility = ""v");
            WriteLiteral(@"isible"";
            document.getElementById(""player2input"").style.visibility = ""visible"";

            // get random word from array called placeholderDB
            var randomWord = placeholderDB[Math.floor(Math.random() * placeholderDB.length)];

            // display for random word
            for (var i = 0; i < randomWord.length; i++) {
                $('#demo').append('<button disabled>' + randomWord.charAt(i) + '</button>')
            }

            // separates the random word and puts each letter in span element
            randomWord.split('').forEach(character => {
                const characterSpan = document.createElement('span')
                characterSpan.classList.add('correct')
                characterSpan.innerText = character
                quoteDisplayElement.appendChild(characterSpan)
            })

            startTimer();
        }

        // sees users input and compares letters typed to randomWord
        quoteInputElement.addEventListener('input', ");
            WriteLiteral(@"() => {
            const arrayQuote = quoteDisplayElement.querySelectorAll('span')
            const arrayValue = quoteInputElement.value.split('')
            arrayQuote.forEach((characterSpan, index) => {
                const character = arrayValue[index]
                if (character === characterSpan.innerText) {
                    characterSpan.classList.add('correct')
                    characterSpan.classList.remove('incorrect')
                } else {
                    characterSpan.classList.remove('correct')
                    characterSpan.classList.add('incorrect')
                }
            })
        })

        let startTime
        function startTimer() {
            timerElement.innerText = 0
            startTime = new Date()
            setInterval(() => {
                timer.innerText = getTimerTime()
            }, 1000)
        }

        function getTimerTime() {
            return Math.floor((new Date() - startTime) / 1000)
        }

</script>");
            WriteLiteral(@"

<style>
    * {
        box-sizing: border-box;
    }

    body {
        text-align: center;
        background-color: #6b5b95;
        margin: 0; /* disables scroll */
    }

    /* Create two equal columns that floats next to each other */
    .column {
        float: left;
        width: 50%;
        padding: 10px;
    }

    /* Clear floats after the columns */
    .row:after {
        content: """";
        display: table;
        clear: both;
    }

    /* Button display for main list of words */
    #demo button:disabled {
        background-color: #feb236;
        border: 1px black solid;
        margin: 1px 1px 1px 1px;
        width: 50px;
        height: 50px;
        color: black;
        font-size: 25px;
        font-weight: bold;
    }

    #timer {
        background-color: black;
        width: 150px;
        margin: 2px 2px 2px 2px;
        color: #feb236;
        font-weight: bold;
        font-size: 2rem;
    }

    .correct {
        color: ");
            WriteLiteral("green;\r\n    }\r\n\r\n    .incorrect {\r\n        color: black;\r\n    }\r\n\r\n    footer {\r\n        background-color: white;\r\n    }\r\n</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Typing.Pages.GameModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Typing.Pages.GameModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Typing.Pages.GameModel>)PageContext?.ViewData;
        public Typing.Pages.GameModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
